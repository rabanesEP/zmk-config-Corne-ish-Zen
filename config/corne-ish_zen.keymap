/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY 0
#define NUMBER 1
#define SYMBOL 2
#define ADJUST 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LSHFT 
                  &kp LGUI &mo 1 &kp RET	 &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// | ESC  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      | VOL-| VOL+| MUTE| PL/P|     |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |	    |     | PREV| NEXT|     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC     &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6     &kp N7     &kp N8 &kp N9    &kp N0 &kp BSPC
   &trans      &kp K_VOL_DN &kp K_VOL_UP &kp K_MUTE	  &kp K_PP	   &trans         &kp LEFT   &kp DOWN   &kp UP &kp RIGHT &trans &trans
   &kp LSHFT   &trans		&trans		 &kp PREV     &kp NEXT	   &trans         &trans	 &trans 	&trans &trans    &trans &trans
                          	      	     &kp LGUI     &trans       &kp SPACE      &kp RET    &mo 3 &kp RALT
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// | ATAB |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 |  F10| BKSP |
// | CTRL |     |  	  |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |  	  |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp LA(TAB)  &kp F1   &kp F2 &kp F3   &kp F4   &kp F5    &kp F6     &kp F7   &kp F8    &kp F9   &kp F10  &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans    &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans    &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &mo 3 &kp SPACE &kp RET   &trans    &kp RALT
                        >;
                };

                adjst_layer {
                        label = "ADJUST";
// -----------------------------------------------------------------------------------------
// | ATAB |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 |  F10| BKSP |
// | CTRL |     |  	  |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |BTCLR| BT1 | BT2 | BT3 | BT4 |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp LA(TAB)	&kp LG(LS(F1))  &kp LG(LS(F2)) &kp LG(LS(F3))   &kp LG(LS(F4))   &kp LG(LS(F5)) &kp LG(LS(F6))		&kp LG(LS(F7))   &kp LG(LS(F8))		&kp LG(LS(F9))		&kp LG(LS(F10)) &kp BSPC
   &kp LCTRL	&trans			&trans			&trans			&trans			&trans			&kp LG(LS(LEFT))	&kp LC(LA(DOWN)) &kp LC(LA(UP))		&kp LG(LS(RIGHT))	&trans			&trans 
   &kp LSHFT	&bt BT_CLR		&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&trans				&trans		  	&trans				&trans				&trans			&trans
                    	     &kp LGUI &trans   &kp SPACE &kp RET   &trans    &kp RALT
                        >;
                };

					
        };
};
